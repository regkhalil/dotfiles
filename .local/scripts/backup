#!/bin/bash

# Exit immediately on error
set -e

# === CONFIGURATION ===
BACKUP_DEST="/media/khalil/External/Backups/Restic"
export RESTIC_REPOSITORY="$BACKUP_DEST"
export RESTIC_PASSWORD_FILE="$HOME/.restic-password"

timestamp() {
    date +"%Y-%m-%d %H:%M:%S"
}

log_info() {
    echo "[INFO  $(timestamp)] $1"
}

log_error() {
    echo "[ERROR $(timestamp)] $1" >&2
}

log_success() {
    echo "[DONE  $(timestamp)] $1"
}

# === START ===
log_info "=== Starting Restic backup process ==="
log_info "Backup destination: $RESTIC_REPOSITORY"
log_info "Password file used: $RESTIC_PASSWORD_FILE"

# Check if the backup destination exists and is mounted
if [ ! -d "$BACKUP_DEST" ]; then
    log_error "Backup destination '$BACKUP_DEST' not found. Is the external drive mounted?"
    exit 1
fi

# === BACKUP ===
log_info "Starting backup of selected directories..."
restic backup \
    "$HOME/Documents" \
    "$HOME/Library" \
    "$HOME/Pictures" \
    "$HOME/Sync" \
    "$HOME/Audiobooks" \
    "$HOME/Music" \
    "$HOME/.config" \
    "$HOME/.mozilla" \
    --exclude-caches

log_success "Backup completed."

# Show summary of latest snapshots
log_info "Displaying the 5 most recent snapshots:"
restic snapshots --last 5

# === PRUNE ===
log_info "Pruning old snapshots (keeping daily:1, weekly:1)..."
restic forget --keep-daily 1 --keep-weekly 1 --prune
log_success "Snapshot pruning completed."

# === RCLONE SYNC ===
log_info "Syncing local Restic repo to remote (rclone target: ensi:RestikBak/)..."
rclone -v sync "$BACKUP_DEST" ensi:RestikBak/
log_success "Remote sync via rclone completed."

# === FINISH ===
log_success "=== All tasks completed successfully ==="
